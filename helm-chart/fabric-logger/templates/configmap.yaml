apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "fabric-logger.name" . }}-network-config
data:
  network.yaml: |-
    name: "Network"
    version: "1.0"
    client:
      {{ toYaml .Values.client }}
    channels:
      {{- range $key, $value:=.Values.channels }}
      {{ $key }}:
        peers:
        {{- range $key, $peersValues:=.peers }}
          {{ $key }}:
            {{- range $key, $value:=$peersValues }}
            {{ $key }}: {{ . }}
            {{- end }}
        {{- end }}
      {{- end }}
    organizations:
      {{- range $key, $value:= .Values.organizations }}
      {{ $key }}:
        mspid: {{ .mspid }}
        peers:
          {{- range .peers }}
          - {{ . }}
          {{- end }}
      {{- end }}
    peers:
      {{- range $key, $value:= .Values.peers }}
      {{ $key }}:
        url: {{ .url }}
        grpcOptions:
        {{- range $key,$value:= .grpcOptions }}
          {{ $key }}: {{ toYaml $value }}
        {{- end }}
        tlsCACerts:
          path: /var/hyperledger/msp/tlscacert/tlscacert.pem
      {{- end }}

  fabriclogger.yaml: |-
    fabric:
      blockType: {{ .Values.fabric.blockType }}
      discovery: {{ .Values.fabric.discovery }}
      asLocalhost: {{ .Values.fabric.asLocalhost }}
      user: {{ .Values.fabric.user }}
      channels:
        {{- range .Values.fabric.channels }}
        - {{ . }}
        {{- end }}
      ccevents:
        {{- range .Values.fabric.ccevents }}
        - channelName: {{ .channelName }}
          chaincodeId: {{ .chaincodeId }}
        {{- end }}
    output:
      type: {{ .Values.output.type }}
      sourceTypePrefix: {{ .Values.output.sourceTypePrefix | quote }}
      sourcetypes:
        {{- range $key, $value:= .Values.output.sourcetypes }}
        {{ $key }}: {{ . | quote }}
        {{- end}}
    prometheus:
      discovery: {{ .Values.prometheus.discovery }}
      validateCertificate: {{ .Values.prometheus.validateCertificate }}
      port: {{ .Values.prometheus.port | quote }}
      path: {{ .Values.prometheus.path | quote }}
    checkpoint:
      filename: {{ .Values.checkpoint.filename | quote }}
      saveInterval: {{ .Values.checkpoint.saveInterval }}
    hec:
      default:
        defaultMetadata:
          {{- range $key, $value:= .Values.hec.default.defaultMetadata }}
          {{ $key }}: {{ . }}
          {{- end}}
        flushTime: {{ .Values.hec.default.flushTime }}
        maxQueueEntries: {{ .Values.hec.default.maxQueueEntries }}
        maxQueueSize: {{ .Values.hec.default.maxQueueSize }}
        gzip: {{ .Values.hec.default.gzip }}
        timeout: {{ .Values.hec.default.timeout }}
        requestKeepAlive: {{ .Values.hec.default.requestKeepAlive }}
        validateCertificate: {{ .Values.hec.default.validateCertificate }}
        maxSockets: {{ .Values.hec.default.maxSockets }}
        userAgent: {{ .Values.hec.default.userAgent }}
        multipleMetricFormatEnabled: {{ .Values.hec.default.multipleMetricFormatEnabled }}
        waitForAvailability: {{ .Values.hec.default.waitForAvailability }}
        retryWaitTime:
          {{- range $key, $value:= .Values.hec.default.retryWaitTime }}
          {{ $key }}: {{ . }}
          {{- end}}
      internal:
        flushTime: {{ .Values.hec.internal.flushTime }}
        defaultMetadata:
          {{- range $key, $value:= .Values.hec.internal.defaultMetadata }}
          {{ $key }}: {{ . }}
          {{- end}}
        defaultFields:
          {{- range $key, $value:= .Values.hec.internal.defaultFields }}
          {{ $key }}: {{ . }}
          {{- end}}
